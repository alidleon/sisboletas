"""
Django settings for sisboletas project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from decimal import Decimal # Asegúrate de tener esta importación si la necesitas en otro lugar
from django.db import models # Asegúrate de tener esta importación si la necesitas en otro lugar

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^a1@l@yaln^rwjqk1g)c00w#%&@mo7vyl_82^eoutjht^0f&qt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# settings.py

# ... (otras configuraciones) ...

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler', # Envía a stderr (consola)
        },
    },
    'root': { # Logger raíz
        'handlers': ['console'],
        'level': 'INFO', # Muestra INFO, WARNING, ERROR, CRITICAL
    },
    'loggers': {
        'django': { # Logger específico para Django
            'handlers': ['console'],
            'level': 'INFO', # O 'DEBUG' para más detalle
            'propagate': False,
        },
    }
}

# ... (resto de settings.py) ...


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'auditlog', 
    'administracion.apps.AdministracionConfig',
    'widget_tweaks',
    'planilla.apps.PlanillaConfig', # <--- ASÍ para la app planilla
    'reportes.apps.ReportesConfig',
    'sueldos.apps.SueldosConfig',
    'boletas.apps.BoletasConfig',
    'bitacora.apps.BitacoraConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
]

ROOT_URLCONF = 'sisboletas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # --- Corregido: Usar BASE_DIR que es un objeto Path ---
        'DIRS': [BASE_DIR / 'plantillas'], # Busca en la carpeta 'plantillas' de tu proyecto
        'APP_DIRS': True, # Busca plantillas dentro de las apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sisboletas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sisboletas',
        'USER': 'postgres',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'personas_db': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sigap_personal_simulacion',
        'USER': 'postgres',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-bo'
TIME_ZONE = 'America/La_Paz'
USE_I18N = True
USE_TZ = True # Recomendado mantener en True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/' # URL para referenciar archivos estáticos

# --- Directorios adicionales donde buscar archivos estáticos (además de las apps) ---
STATICFILES_DIRS = [
    BASE_DIR / 'static', # Busca en la carpeta 'static' de tu proyecto (a nivel de manage.py)
]

# --- Directorio donde collectstatic copiará TODOS los archivos estáticos para PRODUCCIÓN ---
# --- AÑADIDO ---
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Asegúrate de que esta carpeta 'staticfiles' NO esté en tu control de versiones (añádela a .gitignore)
# y que el usuario que corre el servidor Django en producción tenga permisos de escritura aquí.

# --- Finders (usualmente no necesitas cambiarlos) ---
# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder', # Busca en STATICFILES_DIRS
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder', # Busca en app/static/
# ]


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Opcional: Configuración de Mensajes (si usas Bootstrap) ---
# from django.contrib.messages import constants as messages_constants
# MESSAGE_TAGS = {
#     messages_constants.DEBUG: 'alert-secondary',
#     messages_constants.INFO: 'alert-info',
#     messages_constants.SUCCESS: 'alert-success',
#     messages_constants.WARNING: 'alert-warning',
#     messages_constants.ERROR: 'alert-danger',
# }

# --- CONFIGURACIÓN DE AUTENTICACIÓN Y REDIRECCIÓN ---
# Añade estas líneas aquí:

LOGIN_URL = 'login'
# LOGIN_URL: Especifica el 'name' de la URL a la que Django debe redirigir
# a los usuarios cuando intentan acceder a una vista protegida por @login_required
# y no están autenticados. Coincide con name='login' que definimos en urls.py.

LOGIN_REDIRECT_URL = 'index' 
# LOGIN_REDIRECT_URL: Especifica el 'name' de la URL a la que Django debe
# redirigir a los usuarios DESPUÉS de que inicien sesión exitosamente,
# si no se especificó un parámetro 'next' en la URL de login.
# ¡¡DEBES REEMPLAZAR 'nombre_url_dashboard_o_home' con el nombre real
# de la URL de la página a la que quieres que vayan!!
# Por ejemplo, si tienes una vista para listar planillas con name='lista_planillas',
# podrías poner: LOGIN_REDIRECT_URL = 'lista_planillas'
# O si tienes una vista principal (home) con name='home_page', pones: LOGIN_REDIRECT_URL = 'home_page'

LOGOUT_REDIRECT_URL = 'login'
# LOGOUT_REDIRECT_URL: Especifica el 'name' de la URL a la que Django debe
# redirigir a los usuarios DESPUÉS de que cierren sesión exitosamente.
# Redirigir de nuevo a la página de 'login' es una opción común.
# Si no la defines, Django por defecto intenta mostrar la página de "logout_confirmation"
# del admin o una página principal.
# ----------------------------------------------------

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')